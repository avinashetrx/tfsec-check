name: "Reusable Terraform workflow"

on:
  workflow_call:
    inputs:
      workdir:
        required: false
        type: string
        default: '.'
        description: directory to run Terraform commands from
      apply:
        required: false
        type: boolean
        default: false
        description: whether to apply config, or otherwise just plan
      environment:
        required: false
        type: string
        description: If applying, specify a release "environment"
    secrets:
      access_key:
        required: true
      secret_Key:
        required: true

jobs:
  terraform_plan:
    name: "Terraform"
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.plan.outputs.stdout }}
    defaults:
      run:
        working-directory: ${{inputs.workdir}}
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.access_key}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.secret_key}}
      AWS_REGION: "eu-west-1"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -diff -recursive
        working-directory: ./ # To include the modules folder

      - name: Terraform Init
        id: init
        run: terraform init -input=false
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color # possibly unnecessary as "plan" implicitly validates

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false

      - name: Compare plans
        if: inputs.apply && inputs.approved_plan != steps.plan.outputs.stdout
        run: echo "Plans have changed; restart the planning job and review it" && exit 1

      - name: Terraform Apply
        if: inputs.apply
        run: terraform apply -auto-approve -input=false

  terraform_deploy:
    name: "Terraform apply job"
    needs: terraform_plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: inputs.apply
    defaults:
      run:
        working-directory: ${{inputs.workdir}}
    steps:
      - name: Terraform Plan
        id: repeat_plan
        run: terraform plan -no-color -input=false

      - name: Compare plans
        if: inputs.apply && steps.repeat_plan != jobs.terraform_plan.outputs.plan
        run: echo "Plans have changed; restart the planning job and review it again" && exit 1

      - name: Terraform Apply
        if: inputs.apply
        run: terraform apply -auto-approve -input=false
