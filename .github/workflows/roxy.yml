name: "Deploy MarkLogic config"

on:
  # Change from push to workflow_dispatch once merged (only available via website once on main branch)
  # workflow_dispatch:
  #   inputs:
  #     git_ref:
  #       description: 'Commit or branch to deploy'
  #       required: true
  #       type: string
  #     environment:
  #       description: 'Environment to run against'
  #       required: true
  #       type: environment

  push:
    branches:
      - "DT-58"

jobs:
  get_terraform_outputs:
    name: "Get Terraform outputs"
    runs-on: ubuntu-latest
    # unfortunately this means a reviewer needs to approve each job, even when a reviewer triggers the job 
    environment: staging # ${{ inputs.environment }}
    outputs:
      ml_hostname: ${{ steps.get_ml_hostname.outputs.ml_hostname }}
    env:
      # TODO: rename e.g. prod_access_key to just "access_key"
      AWS_ACCESS_KEY_ID: ${{ secrets.access_key }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}
      AWS_REGION: "eu-west-1"
    defaults:
      run:
        working-directory: terraform/staging # use inputs.environment once this is workflow_dispatch
    steps:
      - uses: actions/checkout@v3
      - run: terraform init
      - id: get_ml_hostname
        run: echo "ml_hostname=$(terraform output -raw ml_hostname)" >> $GITHUB_OUTPUT

  deploy_ml:
    name: "Deploy MarkLogic config"
    runs-on: ["self-hosted","staging"] # ${{ inputs.environment }}
    needs: get_terraform_outputs
    environment: staging # ${{ inputs.environment }}
    env:
      ml_dluhc_server: ${{ needs.get_terraform_outputs.outputs.ml_hostname }} # ml_* vars override Roxy's properties
      ml_ldap_password: ${{ secrets.CPM_LDAP_PASSWORD }}
      ml_password: ${{ secrets.CPM_ML_ADMIN_PASSWORD }}
    defaults:
      run:
        working-directory: marklogic
    steps:
      - name: Check out CPM code
        uses: actions/checkout@v3
        with:
          repository: 'communitiesuk/common-payments-module'
          ref: DT-58 # ${{ inputs.git_ref }}
          token: ${{ secrets.GIT_PAT }} # TODO: create a dedicated Git account for this purpose? 
      - run: chmod +x ./ml
      - run: ./ml dluhc bootstrap # --apply-changes=privileges,amps,indexes <--- unsure what the implications of this are
      - run: ./ml dluhc clean modules
      - run: ./ml dluhc clean schemas
      - run: ./ml dluhc deploy modules
      - run: ./ml dluhc deploy schemas
      # - run: ./ml dluhc deploy content <--- would deploy dummy data from the /data folder